//
//  ModelView.swift
//  Projetohacka
//
//  Created by Turma01-11 on 13/05/25.
//

import Foundation

class ViewModel: ObservableObject{
    
    @Published var aluno:[Aluno] = []
    @Published var disc:[Disciplina] = []
    @Published var presen:[Presenca] = []
    
    
    func fetchAluno(){
        guard let url = URL(string: "http://192.168.128.90:1880/LeituraA") else{
            return
        }
        let task = URLSession.shared.dataTask(with: url){[weak self] data, _,error in
            guard let data = data, error == nil else{
                return
            }
            do{
                let parsed = try JSONDecoder().decode([Aluno].self,from:data)
                DispatchQueue.main.sync{
                    self?.aluno = parsed
                }
            }catch{
                print(error)
            }
        }
        task.resume()
    }
    
    
    
    
    func fetchDisc(){
        guard let url = URL(string: "http://192.168.128.90:1880/LeituraD") else{
            return
        }
        let task = URLSession.shared.dataTask(with: url){[weak self] data, _,error in
            guard let data = data, error == nil else{
                return
            }
            do{
                let parsed = try JSONDecoder().decode([Disciplina].self,from:data)
                DispatchQueue.main.sync{
                    self?.disc = parsed
                }
            }catch{
                print(error)
            }
        }
        task.resume()
    }
    
    func fetchpresenca(){
        guard let url = URL(string: "http://192.168.128.90:1880/LeituraP") else{
            return
        }
        let task = URLSession.shared.dataTask(with: url){[weak self] data, _,error in
            guard let data = data, error == nil else{
                return
            }
            do{
                let parsed = try JSONDecoder().decode([Presenca].self,from:data)
                DispatchQueue.main.sync{
                    self?.presen = parsed
                }
            }catch{
                print(error)
            }
        }
        task.resume()
    }
    
    func pres() -> Bool?{
        for dis in disc {
            for data in dis.data{
                for presenca in presen {
                    if data == presenca.datap{
                        for alun in aluno{
                            for di in alun.idDisc{
                                if di == dis.idDisc{
                                    if alun.matricula == presenca.matricula{
                                        return true
                                    }else{
                                        return false
                                    }
                                }else{return nil}
                            }
                        }
                    }else{
                        return nil
                    }
                }
            }
    }
        return nil
    }
}
